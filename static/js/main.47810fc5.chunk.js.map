{"version":3,"sources":["components/Visualization/AlbertaNewCases.js","components/Visualization/AlbertaCases.js","components/Visualization/CitiesNewCases.js","components/Visualization/CitiesVaccination.js","components/Visualization/AlbertaVariant.js","components/Visualization/EdmontonVariant.js","components/Visualization/CalgaryVariant.js","components/Visualization/CitiesVariant.js","components/TitleBar/TitleBar.js","components/Copyright/Copyright.js","components/Loading/Loading.js","Assets/edmonton-banner.jpg","Assets/calgary_final_revised.jpg","components/ImgMediaCard/ImgMediaCard.js","components/ZoneCard/ZoneCard.js","components/Visualization/Alberta.js","components/Visualization/Gender.js","components/Visualization/City.js","components/MapContainer/MapContainer.js","components/VisualizationTab/VisualizationTab.js","App.js","Helper/dataFilter.js","serviceWorker.js","index.js"],"names":["lastLabelCoordinate","titleBar","props","AppBar","position","color","Toolbar","style","marginLeft","fontSize","marginRight","Typography","variant","noWrap","flexGrow","to","textDecoration","Tab","label","textTransform","Copyright","align","Link","href","Date","getFullYear","Example","type","height","width","useStyles","makeStyles","root","maxWidth","marginTop","marginBottom","ImgMediaCard","classes","cities","name","totalCases","edmontonData","length","activeCases","edmontonActive","diedCases","edmontonDied","recoveredCases","edmontonRecovered","firstDoseRate","edmontonDailyVaccination","calgaryData","calgaryActive","calgaryDied","calgaryRecovered","calgaryDailyVaccination","Fragment","map","city","Card","className","CardActionArea","disabled","CardMedia","component","alt","src","edmonton","calgary","title","CardContent","gutterBottom","start","end","duration","CardActions","Button","size","target","ZoneCard","paragraph","albertaData","separator","albertaOldData","Grid","container","spacing","justify","Demo","state","data","active","albertaActive","recovered","albertaRecovered","died","albertaDied","chartData","this","Paper","factory","scaleBand","text","valueField","argumentField","React","male","filter","gender","female","total","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Circle","pathOptions","fillColor","radius","edmontonActiveNumber","calgaryActiveNumber","Marker","Popup","GeoJSON","ArgumentLabel","x","Label","AlbertaNewCases","old","albertaDailyData","reverse","newCases","i","splineValue","argument","date","slice","labelComponent","cases","Math","log","CitiesNewCases","oldEdmonton","edmontonDailyData","oldCalgary","calgaryDailyData","newEdmontonCases","newCalgaryCases","lineValue","newCitiesCases","CitiesVaccination","edmontonDailyVaccinationRate","calgaryDailyVaccinationRate","citiesDailyVaccinationRate","round","AlbertaVariant","albertaDailyVariant","india","british","brazil","southAfrica","EdmontonVariant","edmontonVariant","CalgaryVariant","calgaryVariant","CitiesVariant","calgaryCases","calgaryDelta","edmontonCases","edmontonDelta","citiesCases","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","a11yProps","theme","backgroundColor","palette","background","paper","FullWidthTabs","useTheme","useState","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","axis","direction","onChangeIndex","dir","item","App","northData","northRecovered","northActive","northDied","southData","southRecovered","southActive","southDied","centralData","centralRecovered","centralActive","centralDied","dayBeforeYesterday","offset","setDate","getDate","getMonth","getYesterdaysDate","axios","get","then","response","setState","location","zone","createMuiTheme","responsiveFontSizes","CssBaseline","TitleBar","ThemeProvider","display","justifyContent","Loading","Container","path","exact","render","Component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47810fc5.chunk.js","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n\n    ValueAxis,\n    Chart,\n    ArgumentAxis,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 150;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\nexport default class AlbertaNewCases extends React.PureComponent {\n\n    old = [...this.props.albertaDailyData].reverse();\n    newCases = this.old.map((data, i) => {\n        if (this.props.albertaDailyData[i + 1]) {\n            return ({\n                splineValue: this.old[i + 1][\"cases_confirmed_cumulative\"] - this.old[i][\"cases_confirmed_cumulative\"],\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                splineValue: this.old[i][\"cases_confirmed_cumulative\"] - this.old[i - 1][\"cases_confirmed_cumulative\"],\n                argument: 0,\n            });;\n        }\n\n    });\n    state = {\n        data: this.newCases\n    };\n\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width=\"70vw\"\n                    data={chartData}\n                >\n                    <Title text=\"Alberta daily new cases curve\" />\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"spline\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                    />\n                    <ArgumentAxis labelComponent={ArgumentLabel} />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    ArgumentAxis,\n    ValueAxis,\n    Chart,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\n\nexport default class AlbertaNewCases extends React.PureComponent {\n\n    old = [...this.props.albertaDailyData];\n    cases = this.old.reverse().map((data) => {\n\n        return ({\n            splineValue: Math.log(data[\"cases_confirmed_cumulative\"]),\n            argument: data.date.slice(0, 10),\n        });\n\n\n    });\n    state = {\n        data: this.cases\n    };\n\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width=\"70vw\"\n                    data={chartData}\n                >\n                    <Title text=\"Alberta accumulate cases curve (Logarithm)\" />\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"spline\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                    />\n                    <ArgumentAxis labelComponent={ArgumentLabel} />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    ValueAxis,\n    Chart,\n    Legend,\n    Title,\n    ArgumentAxis,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 150;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\nexport default class CitiesNewCases extends React.PureComponent {\n\n    oldEdmonton = [...this.props.edmontonDailyData].reverse();\n    oldCalgary = [...this.props.calgaryDailyData];\n\n    newEdmontonCases = this.oldEdmonton.map((data, i) => {\n        if (this.props.edmontonDailyData[i + 1]) {\n            return ({\n                splineValue: this.oldEdmonton[i + 1][\"cases_confirmed_cumulative\"] - this.oldEdmonton[i][\"cases_confirmed_cumulative\"],\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                splineValue: 0,\n                argument: 0,\n\n            });;\n        }\n    });\n    newCalgaryCases = this.oldCalgary.reverse().map((data, i) => {\n        if (this.props.calgaryDailyData[i + 1]) {\n            return ({\n                lineValue: this.oldCalgary[i + 1][\"cases_confirmed_cumulative\"] - this.oldCalgary[i][\"cases_confirmed_cumulative\"],\n            });\n        }\n        else {\n            return ({\n                lineValue: 0\n            });;\n        }\n\n    });\n    newCitiesCases = this.newEdmontonCases.map((data, i) => {\n        return ({\n            splineValue: data.splineValue,\n            lineValue: this.newCalgaryCases[i].lineValue,\n            argument: data.argument,\n        });\n    });\n    state = {\n        data: this.newCitiesCases\n    };\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width='70vw'\n                    data={chartData}\n                >\n                    <Title text=\"Edmonton vs Calgary daily new cases curve\" />\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"Edmonton\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                        color=\"blue\"\n                    />\n                    <SplineSeries\n                        name=\"Calgary\"\n                        valueField=\"lineValue\"\n                        argumentField=\"argument\"\n                        color=\"red\"\n                    />\n                    <Legend />\n                    <ArgumentAxis labelComponent={ArgumentLabel} />\n                </Chart>\n            </Paper >\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    ValueAxis,\n    Chart,\n    Legend,\n    ArgumentAxis,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\n\nexport default class CitiesVaccination extends React.PureComponent {\n\n    oldEdmonton = [...this.props.edmontonDailyVaccination];\n    oldCalgary = [...this.props.calgaryDailyVaccination];\n\n    edmontonDailyVaccinationRate = this.oldEdmonton.reverse().map((data) => {\n        return ({\n            splineValue: data[\"percent_pop_1_plus_dose\"],\n            argument: data.date.slice(0, 10),\n        });\n\n    });\n    calgaryDailyVaccinationRate = this.oldCalgary.reverse().map((data) => {\n        return ({\n            lineValue: data[\"percent_pop_1_plus_dose\"],\n            argument: data.date,\n        });\n\n    });\n    citiesDailyVaccinationRate = this.edmontonDailyVaccinationRate.map((data, i) => {\n        return ({\n\n            lineValue: Math.round(this.calgaryDailyVaccinationRate[i].lineValue),\n            splineValue: Math.round(data.splineValue),\n            argument: data.argument,\n        });\n    });\n    state = {\n        data: this.citiesDailyVaccinationRate\n    };\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width='70vw'\n                    data={chartData}\n                >\n                    <Title text=\"Edmonton vs Calgary first dose vaccination rate\" />\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"Edmonton\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                        color=\"blue\"\n                    />\n                    <SplineSeries\n                        name=\"Calgary\"\n                        valueField=\"lineValue\"\n                        argumentField=\"argument\"\n                        color=\"red\"\n                    />\n                    <ArgumentAxis labelComponent={ArgumentLabel} />\n                    <Legend />\n                </Chart>\n            </Paper >\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    Legend,\n    ValueAxis,\n    Chart,\n    Title,\n    ArgumentAxis,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\nexport default class AlbertaVariant extends React.PureComponent {\n\n    old = [...this.props.albertaDailyVariant];\n    newCases = this.old.map((data, i) => {\n        if (this.props.albertaDailyVariant[i + 1]) {\n            return ({\n                india: Math.round(this.props.albertaDailyVariant[i][\"b_1_617\"]),\n                british: Math.round(this.props.albertaDailyVariant[i][\"b_1_1_7\"]),\n                brazil: Math.round(this.props.albertaDailyVariant[i][\"p_1\"]),\n                southAfrica: Math.round(this.props.albertaDailyVariant[i][\"b_1_351\"]),\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                southAfrica: Math.round(this.props.albertaDailyVariant[i][\"b_1_351\"]),\n                brazil: Math.round(this.props.albertaDailyVariant[i - 1][\"p_1\"]),\n                british: Math.round(this.props.albertaDailyVariant[i - 1][\"b_1_1_7\"]),\n                india: Math.round(this.props.albertaDailyVariant[i - 1][\"b_1_617\"]),\n                argument: 0,\n            });;\n        }\n\n    });\n    state = {\n        data: this.newCases\n    };\n\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <React.Fragment >\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }} >\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Alberta Variant Beta VS Delta curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Delta (India B.1.617)\"\n                            valueField=\"india\"\n                            argumentField=\"argument\"\n                        />\n                        <SplineSeries\n                            name=\"Beta (South Africa B.1.351)\"\n                            valueField=\"southAfrica\"\n                            argumentField=\"argument\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n                </Paper>\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }}>\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Alberta Variant Alpha VS Gamma curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Alpha (British B.1.1.7)\"\n                            valueField=\"british\"\n                            argumentField=\"argument\"\n                        />\n                        <SplineSeries\n                            name=\"Gamma (Brazil P.1)\"\n                            valueField=\"brazil\"\n                            argumentField=\"argument\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    Legend,\n    ValueAxis,\n    Chart,\n    Title, ArgumentAxis,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\n\nexport default class EdmontonVariant extends React.PureComponent {\n\n    old = [...this.props.edmontonVariant];\n    newCases = this.old.map((data, i) => {\n        if (this.props.edmontonVariant[i + 1]) {\n            return ({\n                india: Math.round(this.props.edmontonVariant[i][\"b_1_617\"]),\n                british: Math.round(this.props.edmontonVariant[i][\"b_1_1_7\"]),\n                brazil: Math.round(this.props.edmontonVariant[i][\"p_1\"]),\n                southAfrica: Math.round(this.props.edmontonVariant[i][\"b_1_351\"]),\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                southAfrica: Math.round(this.props.edmontonVariant[i][\"b_1_351\"]),\n                brazil: Math.round(this.props.edmontonVariant[i - 1][\"p_1\"]),\n                british: Math.round(this.props.edmontonVariant[i - 1][\"b_1_1_7\"]),\n                india: Math.round(this.props.edmontonVariant[i - 1][\"b_1_617\"]),\n                argument: 0,\n            });;\n        }\n\n    });\n    state = {\n        data: this.newCases\n    };\n\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <React.Fragment >\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }} >\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Edmonton Variant Beta VS Delta curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Delta (India B.1.617)\"\n                            valueField=\"india\"\n                            argumentField=\"argument\"\n                        />\n\n                        <SplineSeries\n                            name=\"Beta (South Africa B.1.351)\"\n                            valueField=\"southAfrica\"\n                            argumentField=\"argument\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n\n                </Paper>\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }} >\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Edmonton Variant Alpha VS Gamma curve\" />\n                        <ValueAxis />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <SplineSeries\n                            name=\"Alpha (British B.1.1.7)\"\n                            valueField=\"british\"\n                            argumentField=\"argument\"\n                        />\n                        <SplineSeries\n                            name=\"Gamma (Brazil P.1)\"\n                            valueField=\"brazil\"\n                            argumentField=\"argument\"\n                        />\n\n                        <Legend />\n                    </Chart>\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    Legend,\n    ValueAxis,\n    Chart,\n    Title,\n    SplineSeries,\n    ArgumentAxis\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\n\nexport default class CalgaryVariant extends React.PureComponent {\n\n    old = [...this.props.calgaryVariant];\n    newCases = this.old.map((data, i) => {\n        if (this.props.calgaryVariant[i + 1]) {\n            return ({\n                india: Math.round(this.props.calgaryVariant[i][\"b_1_617\"]),\n                british: Math.round(this.props.calgaryVariant[i][\"b_1_1_7\"]),\n                brazil: Math.round(this.props.calgaryVariant[i][\"p_1\"]),\n                southAfrica: Math.round(this.props.calgaryVariant[i][\"b_1_351\"]),\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                southAfrica: Math.round(this.props.calgaryVariant[i][\"b_1_351\"]),\n                brazil: Math.round(this.props.calgaryVariant[i - 1][\"p_1\"]),\n                british: Math.round(this.props.calgaryVariant[i - 1][\"b_1_1_7\"]),\n                india: Math.round(this.props.calgaryVariant[i - 1][\"b_1_617\"]),\n                argument: 0,\n            });;\n        }\n\n    });\n    state = {\n        data: this.newCases\n    };\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <React.Fragment >\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }} >\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Calgary Variant Beta VS Delta curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Delta (India B.1.617)\"\n                            valueField=\"india\"\n                            argumentField=\"argument\"\n                        />\n                        <SplineSeries\n                            name=\"Beta (South Africa B.1.351)\"\n                            valueField=\"southAfrica\"\n                            argumentField=\"argument\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n                </Paper>\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }}>\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Calgary Variant Alpha VS Gamma curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Alpha (British B.1.1.7)\"\n                            valueField=\"british\"\n                            argumentField=\"argument\"\n                        />\n                        <SplineSeries\n                            name=\"Gamma (Brazil P.1)\"\n                            valueField=\"brazil\"\n                            argumentField=\"argument\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    Legend,\n    ValueAxis,\n    Chart,\n    Title,\n    ArgumentAxis,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nconst labelHalfWidth = 500;\nlet lastLabelCoordinate;\n\nconst ArgumentLabel = props => {\n    const { x } = props;\n    // filter Labels\n    if (\n        lastLabelCoordinate &&\n        lastLabelCoordinate < x &&\n        x - lastLabelCoordinate <= labelHalfWidth\n    ) {\n        return null;\n    }\n    lastLabelCoordinate = x;\n    return <ArgumentAxis.Label {...props} />;\n};\nexport default class CitiesVariant extends React.PureComponent {\n\n    oldCalgary = [...this.props.calgaryVariant];\n    calgaryCases = this.oldCalgary.map((data, i) => {\n        if (this.props.calgaryVariant[i + 1]) {\n            return ({\n                calgaryDelta: Math.round(this.props.calgaryVariant[i][\"b_1_617\"]),\n                argument: data.date.slice(0, 10),\n            });\n        }\n        else {\n            return ({\n                calgaryDelta: Math.round(this.props.calgaryVariant[i - 1][\"b_1_617\"]),\n                argument: 0,\n            });;\n        }\n\n    });\n    oldEdmonton = [...this.props.edmontonVariant];\n    edmontonCases = this.oldEdmonton.map((data, i) => {\n        if (this.props.edmontonVariant[i + 1]) {\n            return ({\n                edmontonDelta: Math.round(this.props.edmontonVariant[i][\"b_1_617\"]),\n                argument: data.date,\n            });\n        }\n        else {\n            return ({\n                edmontonDelta: Math.round(this.props.edmontonVariant[i - 1][\"b_1_617\"]),\n                argument: 0,\n            });;\n        }\n\n    });\n    citiesCases = this.calgaryCases.map((data, i) => {\n        return ({\n            calgary: data.calgaryDelta,\n            edmonton: this.edmontonCases[i].edmontonDelta,\n            argument: data.argument,\n        });\n    });\n\n    state = {\n        data: this.citiesCases\n    };\n\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <React.Fragment >\n                <Paper style={{ width: \"70vw\", marginBottom: '3vh' }} >\n                    <Chart height={300}\n                        width=\"70vw\"\n                        data={chartData}\n                    >\n                        <Title text=\"Edmonton VS Calgary Delta curve\" />\n                        <ValueAxis />\n                        <SplineSeries\n                            name=\"Calgary\"\n                            valueField=\"calgary\"\n                            argumentField=\"argument\"\n                            color=\"red\"\n                        />\n                        <SplineSeries\n                            name=\"Edmonton\"\n                            valueField=\"edmonton\"\n                            argumentField=\"argument\"\n                            color=\"blue\"\n                        />\n                        <ArgumentAxis labelComponent={ArgumentLabel} />\n                        <Legend />\n                    </Chart>\n                </Paper>\n\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport { Typography, AppBar, Toolbar } from \"@material-ui/core\";\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\nimport { Link } from 'react-router-dom';\nimport {\n    BrowserView,\n    MobileOnlyView,\n    isBrowser,\n    isMobile,\n    TabletView\n} from \"react-device-detect\";\nimport Tab from '@material-ui/core/Tab';\nconst titleBar = (props) => {\n\n    return (\n        <div>\n            <BrowserView>\n                <AppBar position=\"relative\" color=\"primary\" >\n                    <Toolbar style={{ marginLeft: \"10%\" }}>\n                        <TrendingDownIcon fontSize=\"large\" style={{ marginRight: \"1%\" }} />\n                        <Typography variant=\"h6\" noWrap color=\"inherit\" style={{ flexGrow: '1' }}>\n                            Alberta COVID-19 Tracker\n                        </Typography>\n                        <Link to=\"/\" style={{ textDecoration: \"none\" }}>  <Tab label=\"Home\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/visualization\" style={{ textDecoration: \"none\" }}> <Tab label=\"Visualization\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/map/\" style={{ textDecoration: \"none\" }}> <Tab label=\"Map\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                    </Toolbar>\n                </AppBar></BrowserView>\n            <MobileOnlyView>\n                <AppBar position=\"relative\" color=\"primary\" >\n                    <Toolbar style={{ marginLeft: \"1px\" }}>\n                        <TrendingDownIcon fontSize=\"small\" style={{ marginRight: \"20px\" }} />\n                        <Typography color=\"inherit\" style={{ fontSize: '10px', flexGrow: '1' }}>\n                            Alberta COVID-19 Tracker\n                        </Typography>\n                        <Link to=\"/\" style={{ textDecoration: \"none\" }}>  <Tab label=\"Home\" style={{ fontSize: '10px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/visualization\" style={{ textDecoration: \"none\" }}> <Tab label=\"Visualization\" style={{ fontSize: '10px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/map/\" style={{ textDecoration: \"none\" }}> <Tab label=\"Map\" style={{ fontSize: '10px', textTransform: 'none', color: 'white' }} /></Link>\n                    </Toolbar>\n                </AppBar>\n            </MobileOnlyView>\n            <TabletView>\n                <AppBar position=\"relative\" color=\"primary\" >\n                    <Toolbar style={{ marginLeft: \"1px\" }}>\n                        <TrendingDownIcon fontSize=\"large\" style={{ marginRight: \"20px\" }} />\n                        <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: '1' }}>\n                            Alberta COVID-19 Tracker\n                        </Typography>\n                        <Link to=\"/\" style={{ textDecoration: \"none\" }}>  <Tab label=\"Home\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/visualization\" style={{ textDecoration: \"none\" }}> <Tab label=\"Visualization\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                        <Link to=\"/alberta-covid-19-tracker/map/\" style={{ textDecoration: \"none\" }}> <Tab label=\"Map\" style={{ fontSize: '20px', textTransform: 'none', color: 'white' }} /></Link>\n                    </Toolbar>\n                </AppBar>\n            </TabletView>\n\n\n        </div>\n    );\n};\n\nexport default titleBar;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://www.linkedin.cn/in/zijian-zhou/\">\n        {\"Zijian Zhou\"}\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n\n};\nexport default Copyright;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nconst Example = ({ type, color }) => (\n    <ReactLoading type={type} color={color} height={'10px'} width={'10px'}\n    />\n);\n\nexport default Example;","export default __webpack_public_path__ + \"static/media/edmonton-banner.da90867e.jpg\";","export default __webpack_public_path__ + \"static/media/calgary_final_revised.f2bffc36.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CountUp from 'react-countup';\nimport edmonton from '../../Assets/edmonton-banner.jpg';\nimport calgary from '../../Assets/calgary_final_revised.jpg';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    marginLeft: 10,\n    marginTop: 10,\n    marginBottom: 10,\n    marginRight: 10,\n\n  },\n});\nconst ImgMediaCard = (props) => {\n  const classes = useStyles();\n  const cities = [\n    {\n      name: 'Edmonton',\n      totalCases: props.edmontonData.length,\n      activeCases: props.edmontonActive.length,\n      diedCases: props.edmontonDied.length,\n      recoveredCases: props.edmontonRecovered.length,\n      firstDoseRate: props.edmontonDailyVaccination[0][\"percent_pop_1_plus_dose\"]\n    },\n    {\n      name: 'Calgary',\n      totalCases: props.calgaryData.length,\n      activeCases: props.calgaryActive.length,\n      diedCases: props.calgaryDied.length,\n      recoveredCases: props.calgaryRecovered.length,\n      firstDoseRate: props.calgaryDailyVaccination[0][\"percent_pop_1_plus_dose\"]\n    }\n  ];\n  return (\n    <React.Fragment>\n      {cities.map((city) => {\n        return <Card className={classes.root} key={city.name}>\n          <CardActionArea disabled >\n            <CardMedia\n              component=\"img\"\n              alt={city.name === \"Edmonton\" ? \"Edmonton Zone\" :\n                \"Calgary Zone\"}\n              height=\"300px\"\n              src={city.name === \"Edmonton\" ?\n                edmonton :\n                calgary}\n              title={city.name === \"Edmonton\" ? \"Edmonton Zone\" :\n                \"Calgary Zone\"}\n            />\n            <CardContent  >\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                {city.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Total cases: {<CountUp start={0} end={city.totalCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Recovered cases: {<CountUp start={0} end={city.recoveredCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Active cases: {<CountUp start={0} end={city.activeCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Death cases: {<CountUp start={0} end={city.diedCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                First Dose of Vaccination rate: {<CountUp start={0} end={city.firstDoseRate} duration={2.5} />}%\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" target=\"_blank\" href={city.name === \"Edmonton\" ?\n              \"https://www.edmonton.ca/programs_services/emergency_preparedness/covid-19.aspx\" :\n              \"https://www.calgary.ca/csps/cema/covid19/response-to-coronavirus.html\"}>\n              More info\n            </Button>\n          </CardActions>\n        </Card>;\n      })}\n\n    </React.Fragment>\n\n  );\n};\nexport default ImgMediaCard;","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport ImgMediaCard from '../ImgMediaCard/ImgMediaCard';\nimport CountUp from 'react-countup';\nconst ZoneCard = (props) => {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph style={{ marginTop: \"2%\" }} >\n                Alberta total: {<CountUp start={0} end={props.albertaData.length} duration={2.5} separator=',' />}\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph style={{ marginTop: \"2%\" }} >\n                Alberta increased: {<CountUp start={0} end={props.albertaData.length - props.albertaOldData.length} duration={2.5} separator=',' />} on yesterday\n            </Typography>\n            <Grid container spacing={2} justify=\"center\">\n                <ImgMediaCard\n                    edmontonDailyVaccination={props.edmontonDailyVaccination}\n                    calgaryDailyVaccination={props.calgaryDailyVaccination}\n                    edmontonData={props.edmontonData}\n                    edmontonActive={props.edmontonActive}\n                    edmontonRecovered={props.edmontonRecovered}\n                    edmontonDied={props.edmontonDied}\n                    calgaryData={props.calgaryData}\n                    calgaryActive={props.calgaryActive}\n                    calgaryRecovered={props.calgaryRecovered}\n                    calgaryDied={props.calgaryDied} />\n            </Grid>\n            <Grid container spacing={2} justify=\"center\">\n            </Grid>\n        </React.Fragment>\n    );\n};\nexport default ZoneCard;","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Tooltip } from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n\n    state = {\n        data: [\n            { state: 'Active', active: this.props.albertaActive.length },\n            { state: 'Recovered', recovered: this.props.albertaRecovered.length },\n            { state: 'Died', died: this.props.albertaDied.length }\n        ]\n    };\n\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Alberta Covid-19\" />\n                    <BarSeries\n                        valueField=\"active\"\n                        argumentField=\"state\"\n                        name=\"Active\"\n                        color=\"red\"\n                    />\n                    <BarSeries\n                        valueField=\"recovered\"\n                        argumentField=\"state\"\n                        name=\"Recovered\"\n                        color=\"#bcf2b3\"\n                    />\n                    <BarSeries\n                        valueField=\"died\"\n                        argumentField=\"state\"\n                        name=\"Died\"\n                        color=\"black\"\n                    />\n                    <EventTracker />\n                    <HoverState />\n                    <Tooltip />\n\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport {\n    Chart,\n    ArgumentAxis,\n    ValueAxis,\n    BarSeries,\n    Title,\n    Legend,\n    Tooltip\n} from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n    state = {\n        data: [\n            {\n                state: 'Male', male: this.props.albertaData\n                    .filter((data) => {\n                        return data.gender === 'Male';\n                    }).length\n            },\n            {\n                state: 'Female', female: this.props.albertaData\n                    .filter((data) => {\n                        return data.gender === 'Female';\n                    }).length\n            },\n        ]\n    };\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Gender\" />\n                    <BarSeries\n                        valueField=\"male\"\n                        argumentField=\"state\"\n                        name=\"Male\"\n                        color=\"#a4c6ed\"\n                    />\n                    <BarSeries\n                        valueField=\"female\"\n                        argumentField=\"state\"\n                        name=\"Female\"\n                        color=\"pink\"\n                    />\n                    <EventTracker />\n                    <HoverState />\n                    <Tooltip />\n                    <Legend />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport {\n    Chart,\n    ArgumentAxis,\n    ValueAxis,\n    BarSeries,\n    Title,\n    Legend,\n    Tooltip\n} from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale, Stack } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n    state = {\n        data: [\n            {\n                state: 'Edmonton',\n                recovered: this.props.edmontonData\n                    .filter((data) => {\n                        return data[\"case_status\"] === 'Recovered';\n                    }).length,\n                total: this.props.edmontonData.length\n            },\n            {\n                state: 'Calgary',\n                recovered: this.props.calgaryData\n                    .filter((data) => {\n                        return data[\"case_status\"] === 'Recovered';\n                    }).length,\n                total: this.props.calgaryData.length\n            },\n        ]\n    };\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Edmonton vs Calgary\" />\n                    <BarSeries\n                        valueField=\"total\"\n                        argumentField=\"state\"\n                        name=\"Total\"\n                        color=\"#b5bab5\"\n                    />\n                    <BarSeries\n                        valueField=\"recovered\"\n                        argumentField=\"state\"\n                        name=\"Recovered\"\n                        color=\"#bcf2b3\"\n                    />\n\n                    <Stack />\n                    <EventTracker />\n                    <HoverState />\n                    <Legend />\n                    <Tooltip />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import { MapContainer, GeoJSON, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\nimport React from 'react';\nimport edmonton from '../../Data/edmonton.json';\nimport calgary from '../../Data/calgary.json';\nconst map = (props) => {\n  return (\n    <React.Fragment>\n      <MapContainer center={[52.0, -114.5765]} zoom={5.5} scrollWheelZoom={false} style={{ height: '42vh', width: '70vw' }}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Circle center={[53.5461, -113.4938]} pathOptions={{ fillColor: 'blue' }} radius={props.edmontonActiveNumber * 50} />\n        <Circle center={[51.0447, -114.0719]} pathOptions={{ fillColor: 'red' }} radius={props.calgaryActiveNumber * 50} />\n        <Marker position={[53.5461, -113.4938]}>\n\n          <Popup>\n            Edmonton Active Cases: {props.edmontonActiveNumber}\n          </Popup>\n        </Marker>\n        <Marker position={[51.0447, -114.0719]}>\n          <Popup>\n            Calgary Active Cases: {props.calgaryActiveNumber}\n          </Popup>\n        </Marker>\n        <GeoJSON data={edmonton} color=\"blue\" />\n        <GeoJSON data={calgary} color=\"red\" />\n      </MapContainer>\n    </React.Fragment>\n  );\n};\n\nexport default map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport AlbertaNewCases from '../Visualization/AlbertaNewCases';\nimport AlbertaCases from '../Visualization/AlbertaCases';\nimport CitiesNewCases from '../Visualization/CitiesNewCases';\nimport CitiesVaccination from '../Visualization/CitiesVaccination';\nimport AlbertaVariant from \"../Visualization/AlbertaVariant\";\nimport EdmontonVariant from \"../Visualization/EdmontonVariant\";\nimport CalgaryVariant from '../Visualization/CalgaryVariant';\nimport CitiesVariant from '../Visualization/CitiesVariant';\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>  {children}</div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: '80vw',\n\n    },\n}));\n\nexport default function FullWidthTabs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Alberta\" {...a11yProps(0)} />\n                    <Tab label=\"City Zones\" {...a11yProps(1)} />\n                    <Tab label=\"Edmonton Zone\" {...a11yProps(2)} />\n                    <Tab label=\"Calgary Zone\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                style={{ marginTop: '3vh' }}\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel value={value} index={0} dir={theme.direction} >\n                    <Grid container spacing={2} justify=\"center\" style={{ height: '80vh' }}>\n                        <Grid item>\n                            <AlbertaNewCases albertaDailyData={props.albertaDailyData} />\n                        </Grid>\n                        <Grid item>\n                            <AlbertaCases albertaDailyData={props.albertaDailyData} />\n                        </Grid>\n                        <Grid item>\n                            <AlbertaVariant albertaDailyVariant={props.albertaDailyVariant} />\n                        </Grid>\n                    </Grid>\n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                    <Grid container spacing={2} justify=\"center\" style={{ height: '80vh' }}>\n                        <Grid item>\n                            <CitiesNewCases calgaryDailyData={props.calgaryDailyData} edmontonDailyData={props.edmontonDailyData} />\n                        </Grid>\n                        <Grid item>\n                            <CitiesVaccination calgaryDailyVaccination={props.calgaryDailyVaccination} edmontonDailyVaccination={props.edmontonDailyVaccination} />\n                        </Grid>\n                        <Grid item>\n                            <CitiesVariant calgaryVariant={props.calgaryVariant} edmontonVariant={props.edmontonVariant} />\n                        </Grid>\n                    </Grid>\n                </TabPanel>\n                <TabPanel value={value} index={2} dir={theme.direction}>\n                    <Grid container spacing={2} justify=\"center\" >\n                        <Grid item>\n                            <EdmontonVariant edmontonVariant={props.edmontonVariant} />\n                        </Grid>\n                    </Grid>\n                </TabPanel>\n                <TabPanel value={value} index={3} dir={theme.direction}>\n                    <Grid container spacing={2} justify=\"center\" >\n                        <Grid item>\n                            <CalgaryVariant calgaryVariant={props.calgaryVariant} />\n                        </Grid>\n                    </Grid>\n                </TabPanel>\n            </SwipeableViews>\n        </div>\n    );\n}\n","import \"moment-timezone\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, CssBaseline } from \"@material-ui/core\";\nimport TitleBar from './components/TitleBar/TitleBar';\nimport Copyright from \"./components/Copyright/Copyright\";\nimport { getYesterdaysDate } from './Helper/dataFilter';\nimport Loading from '../src/components/Loading/Loading';\nimport ZoneCard from './components/ZoneCard/ZoneCard';\nimport Alberta from './components/Visualization/Alberta';\nimport Gender from './components/Visualization/Gender';\nimport City from './components/Visualization/City';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport Map from '../src/components/MapContainer/MapContainer';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport VisualizationTab from './components/VisualizationTab/VisualizationTab';\nclass App extends Component {\n\n  state = {\n    albertaOldData: null,\n    albertaData: null, albertaRecovered: [], albertaActive: [], albertaDied: [],\n    edmontonData: [], edmontonRecovered: [], edmontonActive: [], edmontonDied: [],\n    calgaryData: [], calgaryRecovered: [], calgaryActive: [], calgaryDied: [],\n    northData: [], northRecovered: [], northActive: [], northDied: [],\n    southData: [], southRecovered: [], southActive: [], southDied: [],\n    centralData: [], centralRecovered: [], centralActive: [], centralDied: [],\n    albertaDailyData: [], edmontonDailyData: [], calgaryDailyData: [], calgaryDailyVaccination: [], edmontonDailyVaccination: [],\n    albertaDailyVariant: [], edmontonVariant: [], calgaryVariant: []\n  };\n  componentDidMount() {\n    const dayBeforeYesterday = getYesterdaysDate(3);\n    axios.get(`https://data.edmonton.ca/resource/jmcu-tz8y.json?$limit=10000000000&$where=date_reported between '2020-03-06' and '${dayBeforeYesterday}'&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq`).then((response) => {\n      const albertaOldData = response.data;\n      this.setState({ albertaOldData: albertaOldData });\n\n    });\n    /**\n    Getting the Alberta Day by Day Covid-19 Data below\n    */\n    axios.get('https://data.edmonton.ca/resource/gxqm-z6fa.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n        const albertaDailyData = response.data.filter((data) => {\n          return data.location === \"Alberta\";\n        });\n        const edmontonDailyData = response.data.filter((data) => {\n          return data.location === \"Edmonton Zone\";\n        });\n        const calgaryDailyData = response.data.filter((data) => {\n          return data.location === \"Calgary Zone\";\n        });\n\n        this.setState({ edmontonDailyData: edmontonDailyData, albertaDailyData: albertaDailyData, calgaryDailyData: calgaryDailyData });\n\n      });\n    /**\n   Getting the Alberta Day by Day Covid-19 Data above\n   */\n    /**\n    Getting the Alberta Vaccination Data below\n    */\n    axios.get('https://data.edmonton.ca/resource/d43f-8ikp.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n        const edmontonDailyVaccination = response.data.filter((data) => {\n          return data.location === 'Edmonton Zone';\n        });\n        const calgaryDailyVaccination = response.data.filter((data) => {\n          return data.location === 'Calgary Zone';\n        });\n        this.setState({ edmontonDailyVaccination: edmontonDailyVaccination, calgaryDailyVaccination: calgaryDailyVaccination });\n      });\n    /**\n    Getting the Alberta Vaccination Data above\n   */\n    /**\n  Getting the Alberta Day by Day Covid-19 Data above\n */\n    /**\n    Getting the Alberta Covid-19 Variant Data below\n    */\n    axios.get('https://data.edmonton.ca/resource/f7kx-redx.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n\n        const albertaDailyVariant = response.data.filter((data) => {\n\n          return (data.zone === 'In Alberta');\n\n        });\n        const edmontonVariant = response.data.filter((data) => {\n          return (data.zone === 'Edmonton Zone');\n        });\n        const calgaryVariant = response.data.filter((data) => {\n          return (data.zone === 'Calgary Zone');\n        });\n\n        this.setState({ albertaDailyVariant: albertaDailyVariant, edmontonVariant: edmontonVariant, calgaryVariant: calgaryVariant });\n      });\n    /**\n    Getting the Alberta Covid-19 Variant Data  above\n   */\n\n\n\n    axios.get('https://data.edmonton.ca/resource/jmcu-tz8y.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n        const albertaData = response.data;\n        const edmontonData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Edmonton Zone');\n        });\n        const albertaRecovered = albertaData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const albertaActive = albertaData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const albertaDied = albertaData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const edmontonRecovered = edmontonData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const edmontonActive = edmontonData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const edmontonDied = edmontonData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const calgaryData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Calgary Zone');\n        });\n        const calgaryRecovered = calgaryData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const calgaryActive = calgaryData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const calgaryDied = calgaryData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const northData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'North Zone');\n        });\n        const northRecovered = northData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const northActive = northData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const northDied = northData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const southData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'South Zone');\n        });\n        const southRecovered = southData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const southActive = southData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const southDied = southData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const centralData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Central Zone');\n        });\n        const centralRecovered = centralData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const centralActive = centralData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const centralDied = centralData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        this.setState({\n          albertaData, albertaRecovered, albertaActive, albertaDied,\n          edmontonData, edmontonRecovered, edmontonActive, edmontonDied,\n          calgaryData, calgaryRecovered, calgaryActive, calgaryDied,\n          northData, northRecovered, northActive, northDied,\n          southData, southRecovered, southActive, southDied,\n          centralData, centralRecovered, centralActive, centralDied\n        });\n      });\n  }\n  render() {\n    let theme = createMuiTheme();\n    theme = responsiveFontSizes(theme);\n    return (\n      // #2B588E\n      <HashRouter>\n        <React.Fragment >\n          <CssBaseline />\n          <TitleBar />\n          <main>\n            <ThemeProvider theme={theme}>\n              {this.state.albertaData === null || this.state.albertaOldData === null || this.state.albertaDailyData === null || this.state.edmontonDailyVaccination === null\n                || this.state.albertaDailyVariant === null ?\n                <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n                  <Loading type=\"spin\" color=\"black\" />\n                </div> :\n                <Container maxWidth='lg' style={{ marginBottom: '10px' }}>\n                  <Route path=\"/\" exact render={() => {\n                    return (\n                      <React.Fragment>\n                        <div style={{ marginBottom: '20px' }}>\n                          <ZoneCard albertaData={this.state.albertaData}\n                            albertaOldData={this.state.albertaOldData}\n                            edmontonData={this.state.edmontonData}\n                            edmontonActive={this.state.edmontonActive}\n                            edmontonRecovered={this.state.edmontonRecovered}\n                            edmontonDied={this.state.edmontonDied}\n                            calgaryData={this.state.calgaryData}\n                            calgaryActive={this.state.calgaryActive}\n                            calgaryRecovered={this.state.calgaryRecovered}\n                            calgaryDied={this.state.calgaryDied}\n                            edmontonDailyVaccination={this.state.edmontonDailyVaccination}\n                            calgaryDailyVaccination={this.state.calgaryDailyVaccination} />\n                        </div>\n                        <Grid container justify=\"center\" spacing={4}>\n                          <Grid item >\n                            <Alberta albertaActive={this.state.albertaActive}\n                              albertaRecovered={this.state.albertaRecovered}\n                              albertaDied={this.state.albertaDied} />\n                          </Grid>\n                          <Grid item >\n                            <Gender albertaData={this.state.albertaData} />\n                          </Grid>\n                          <Grid item >\n                            <City edmontonData={this.state.edmontonData} calgaryData={this.state.calgaryData} />\n                          </Grid><Grid item ></Grid>\n                        </Grid>\n                      </React.Fragment>\n                    );\n                  }} />\n                  <Switch>\n                    <Route path=\"/alberta-covid-19-tracker/visualization\" exact render={() => {\n                      return (\n                        <React.Fragment>\n                          <Grid container justify=\"center\" spacing={4} style={{ marginTop: \"1vh\", marginBottom: \"1vh\" }}>\n                            <Grid item>\n                              <VisualizationTab albertaDailyData={this.state.albertaDailyData}\n                                calgaryDailyData={this.state.calgaryDailyData} edmontonDailyData={this.state.edmontonDailyData}\n                                calgaryDailyVaccination={this.state.calgaryDailyVaccination} edmontonDailyVaccination={this.state.edmontonDailyVaccination}\n                                albertaDailyVariant={this.state.albertaDailyVariant}\n                                edmontonVariant={this.state.edmontonVariant}\n                                calgaryVariant={this.state.calgaryVariant} />\n                            </Grid>\n                          </Grid>\n                        </React.Fragment>\n                      );\n                    }} />\n                    <Route path=\"/alberta-covid-19-tracker/map\" render={() => {\n                      return (\n                        <Grid container justify=\"center\" spacing={4} style={{ marginTop: \"1vh\", marginBottom: \"1vh\" }}>\n                          <Grid item >\n                            <Map edmontonActiveNumber={this.state.edmontonActive.length}\n                              calgaryActiveNumber={this.state.calgaryActive.length} />\n                          </Grid>\n                        </Grid>\n\n                      );\n                    }} />\n                  </Switch>\n\n\n\n                </Container>\n              }\n            </ThemeProvider>\n          </main>\n          <footer>\n            <Copyright />\n          </footer>\n        </React.Fragment >\n      </HashRouter>\n    );\n  }\n\n};\n\nexport default App;\n","export const getYesterdaysDate = (offset) => {\n    /**\n     *  yesterday: offset=2, dayBeforeYesterday: offset = 3\n     */\n    let date = new Date();\n    date.setDate(date.getDate() - offset);\n    return (\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n};\n\n/*----------------------------------------removeDuplicates-------------------------*/\nexport const removeDuplicates = (originalArray, prop) => {\n    let newArray = [];\n    let lookupObject = {};\n    for (let i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n    }\n    for (let i in lookupObject) {\n        newArray.push(lookupObject[i]);\n    }\n    return newArray;\n};\n//reference:https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n/*--------------------------------------Finalize the array-------------------------*/\nexport const finalizeArray = (originalArray, uniqueArray) => {\n    let finalArray = [];\n    for (let i = 0; i < uniqueArray.length; i++) {\n        let newObject = {};\n        newObject[\"alberta_health_services_zone\"] =\n            uniqueArray[i][\"alberta_health_services_zone\"];\n        let zoneArray = originalArray.filter(\n            (city) =>\n                city[\"alberta_health_services_zone\"] ===\n                uniqueArray[i][\"alberta_health_services_zone\"]\n        );\n        newObject[\"total case\"] = zoneArray.length;\n        newObject[\"total active\"] = zoneArray.filter(\n            (active) => active[\"case_status\"] === \"Active\"\n        ).length;\n        newObject[\"total death\"] = zoneArray.filter(\n            (death) => death[\"case_status\"] === \"Died\"\n        ).length;\n        finalArray.push(newObject);\n    }\n    return finalArray;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}