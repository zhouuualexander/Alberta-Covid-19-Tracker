{"version":3,"sources":["components/TitleBar/TitleBar.js","components/Copyright/Copyright.js","components/Loading/Loading.js","Assets/edmonton-banner.jpg","Assets/calgary_final_revised.jpg","components/ImgMediaCard/ImgMediaCard.js","components/ZoneCard/ZoneCard.js","components/Visualization/Alberta.js","components/Visualization/Gender.js","components/Visualization/City.js","components/MapContainer/MapContainer.js","components/Visualization/AlbertaNewCases.js","components/Visualization/AlbertaCases.js","components/Visualization/CitiesNewCases.js","App.js","Helper/dataFilter.js","serviceWorker.js","index.js"],"names":["titleBar","props","AppBar","position","color","Toolbar","style","marginLeft","fontSize","marginRight","Typography","variant","noWrap","Copyright","align","Link","href","Date","getFullYear","Example","type","height","width","useStyles","makeStyles","root","maxWidth","marginTop","marginBottom","ImgMediaCard","classes","cities","name","totalCases","edmontonData","length","activeCases","edmontonActive","diedCases","edmontonDied","recoveredCases","edmontonRecovered","calgaryData","calgaryActive","calgaryDied","calgaryRecovered","Fragment","map","city","Card","className","CardActionArea","disabled","CardMedia","component","alt","src","edmonton","calgary","title","CardContent","gutterBottom","start","end","duration","CardActions","Button","size","target","ZoneCard","paragraph","albertaData","separator","albertaOldData","Grid","container","spacing","justify","Demo","state","data","active","albertaActive","recovered","albertaRecovered","died","albertaDied","chartData","this","Paper","factory","scaleBand","text","valueField","argumentField","React","male","filter","gender","female","total","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Circle","pathOptions","fillColor","radius","edmontonActiveNumber","calgaryActiveNumber","Marker","Popup","AlbertaNewCases","old","albertaDailyData","newCases","reverse","i","splineValue","argument","date","cases","Math","log","CitiesNewCases","oldEdmonton","edmontonDailyData","oldCalgary","calgaryDailyData","newEdmontonCases","newCalgaryCases","lineValue","newCitiesCases","App","northData","northRecovered","northActive","northDied","southData","southRecovered","southActive","southDied","centralData","centralRecovered","centralActive","centralDied","dayBeforeYesterday","offset","setDate","getDate","getMonth","getYesterdaysDate","axios","get","then","response","setState","location","theme","createMuiTheme","responsiveFontSizes","CssBaseline","TitleBar","ThemeProvider","display","justifyContent","Loading","Container","item","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00f696c0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Typography, AppBar, Toolbar } from \"@material-ui/core\";\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\n\nconst titleBar = (props) => {\n\n    return (\n        <div>\n\n            <AppBar position=\"relative\" color=\"primary\" >\n                <Toolbar style={{ marginLeft: \"10%\" }}>\n                    <TrendingDownIcon fontSize=\"large\" style={{ marginRight: \"1%\" }} />\n                    <Typography variant=\"h6\" noWrap color=\"inherit\">\n                        Alberta COVID-19 Tracker\n    </Typography>\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default titleBar;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://www.linkedin.cn/in/zijian-zhou/\">\n        {\"Zijian Zhou\"}\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n\n};\nexport default Copyright;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nconst Example = ({ type, color }) => (\n    <ReactLoading type={type} color={color} height={'10px'} width={'10px'}\n    />\n);\n\nexport default Example;","export default __webpack_public_path__ + \"static/media/edmonton-banner.da90867e.jpg\";","export default __webpack_public_path__ + \"static/media/calgary_final_revised.f2bffc36.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CountUp from 'react-countup';\nimport edmonton from '../../Assets/edmonton-banner.jpg';\nimport calgary from '../../Assets/calgary_final_revised.jpg';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    marginLeft: 10,\n    marginTop: 10,\n    marginBottom: 10,\n    marginRight: 10,\n\n  },\n});\nconst ImgMediaCard = (props) => {\n  const classes = useStyles();\n  const cities = [\n    {\n      name: 'Edmonton',\n      totalCases: props.edmontonData.length,\n      activeCases: props.edmontonActive.length,\n      diedCases: props.edmontonDied.length,\n      recoveredCases: props.edmontonRecovered.length\n    },\n    {\n      name: 'Calgary',\n      totalCases: props.calgaryData.length,\n      activeCases: props.calgaryActive.length,\n      diedCases: props.calgaryDied.length,\n      recoveredCases: props.calgaryRecovered.length\n    }\n  ];\n  return (\n    <React.Fragment>\n      {cities.map((city) => {\n        return <Card className={classes.root} key={city.name}>\n          <CardActionArea disabled >\n            <CardMedia\n              component=\"img\"\n              alt={city.name === \"Edmonton\" ? \"Edmonton Zone\" :\n                \"Calgary Zone\"}\n              height=\"300px\"\n              src={city.name === \"Edmonton\" ?\n                edmonton :\n                calgary}\n              title={city.name === \"Edmonton\" ? \"Edmonton Zone\" :\n                \"Calgary Zone\"}\n            />\n            <CardContent  >\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                {city.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Total cases {<CountUp start={0} end={city.totalCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Recovered cases {<CountUp start={0} end={city.recoveredCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Active cases {<CountUp start={0} end={city.activeCases} duration={2.5} />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n                Death cases {<CountUp start={0} end={city.diedCases} duration={2.5} />}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" target=\"_blank\" href={city.name === \"Edmonton\" ?\n              \"https://www.edmonton.ca/programs_services/emergency_preparedness/covid-19.aspx\" :\n              \"https://www.calgary.ca/csps/cema/covid19/response-to-coronavirus.html\"}>\n              More info\n          </Button>\n          </CardActions>\n        </Card>;\n      })}\n\n    </React.Fragment>\n\n  );\n};\nexport default ImgMediaCard;","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport ImgMediaCard from '../ImgMediaCard/ImgMediaCard';\nimport CountUp from 'react-countup';\nconst ZoneCard = (props) => {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph style={{ marginTop: \"2%\" }} >\n                Alberta total: {<CountUp start={0} end={props.albertaData.length} duration={2.5} separator=',' />}\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph style={{ marginTop: \"2%\" }} >\n                Alberta increased: {<CountUp start={0} end={props.albertaData.length - props.albertaOldData.length} duration={2.5} separator=',' />} on yesterday\n            </Typography>\n            <Grid container spacing={2} justify=\"center\">\n                <ImgMediaCard\n                    edmontonData={props.edmontonData}\n                    edmontonActive={props.edmontonActive}\n                    edmontonRecovered={props.edmontonRecovered}\n                    edmontonDied={props.edmontonDied}\n                    calgaryData={props.calgaryData}\n                    calgaryActive={props.calgaryActive}\n                    calgaryRecovered={props.calgaryRecovered}\n                    calgaryDied={props.calgaryDied} />\n            </Grid>\n            <Grid container spacing={2} justify=\"center\">\n            </Grid>\n        </React.Fragment>\n    );\n};\nexport default ZoneCard;","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Tooltip } from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n\n    state = {\n        data: [\n            { state: 'Active', active: this.props.albertaActive.length },\n            { state: 'Recovered', recovered: this.props.albertaRecovered.length },\n            { state: 'Died', died: this.props.albertaDied.length }\n        ]\n    };\n\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Alberta Covid-19\" />\n                    <BarSeries\n                        valueField=\"active\"\n                        argumentField=\"state\"\n                        name=\"Active\"\n                        color=\"red\"\n                    />\n                    <BarSeries\n                        valueField=\"recovered\"\n                        argumentField=\"state\"\n                        name=\"Recovered\"\n                        color=\"green\"\n                    />\n                    <BarSeries\n                        valueField=\"died\"\n                        argumentField=\"state\"\n                        name=\"Died\"\n                        color=\"black\"\n                    />\n                    <EventTracker />\n                    <HoverState />\n                    <Tooltip />\n\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport {\n    Chart,\n    ArgumentAxis,\n    ValueAxis,\n    BarSeries,\n    Title,\n    Legend,\n    Tooltip\n} from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n    state = {\n        data: [\n            {\n                state: 'Male', male: this.props.albertaData\n                    .filter((data) => {\n                        return data.gender === 'Male';\n                    }).length\n            },\n            {\n                state: 'Female', female: this.props.albertaData\n                    .filter((data) => {\n                        return data.gender === 'Female';\n                    }).length\n            },\n        ]\n    };\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Gender\" />\n                    <BarSeries\n                        valueField=\"male\"\n                        argumentField=\"state\"\n                        name=\"Male\"\n                        color=\"DarkBlue\"\n                    />\n                    <BarSeries\n                        valueField=\"female\"\n                        argumentField=\"state\"\n                        name=\"Female\"\n                        color=\"pink\"\n                    />\n\n                    <EventTracker />\n                    <HoverState />\n                    <Tooltip />\n                    <Legend />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport {\n    Chart,\n    ArgumentAxis,\n    ValueAxis,\n    BarSeries,\n    Title,\n    Legend,\n    Tooltip\n} from '@devexpress/dx-react-chart-material-ui';\nimport { scaleBand } from '@devexpress/dx-chart-core';\nimport { ArgumentScale, Stack } from '@devexpress/dx-react-chart';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nexport default class Demo extends React.PureComponent {\n    state = {\n        data: [\n            {\n                state: 'Edmonton',\n                recovered: this.props.edmontonData\n                    .filter((data) => {\n                        return data[\"case_status\"] === 'Recovered';\n                    }).length,\n                total: this.props.edmontonData.length\n            },\n            {\n                state: 'Calgary',\n                recovered: this.props.calgaryData\n                    .filter((data) => {\n                        return data[\"case_status\"] === 'Recovered';\n                    }).length,\n                total: this.props.calgaryData.length\n            },\n        ]\n    };\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"300px\" }}>\n\n                <Chart height={300}\n                    width={300}\n                    data={chartData}\n                >\n                    <Animation duration={3000} />\n                    <ArgumentScale factory={scaleBand} />\n                    <ArgumentAxis />\n                    <ValueAxis />\n                    <Title text=\"Edmonton vs Calgary\" />\n                    <BarSeries\n                        valueField=\"total\"\n                        argumentField=\"state\"\n                        name=\"Total\"\n                        color=\"grey\"\n                    />\n                    <BarSeries\n                        valueField=\"recovered\"\n                        argumentField=\"state\"\n                        name=\"Recovered\"\n                        color=\"green\"\n                    />\n\n                    <Stack />\n                    <EventTracker />\n                    <HoverState />\n                    <Legend />\n                    <Tooltip />\n                </Chart>\n            </Paper>\n        );\n    }\n}\n\n","import { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\nimport React from 'react';\n\nconst map = (props) => {\n  return (\n    <React.Fragment>\n      <MapContainer center={[53.9333, -116.5765]} zoom={4.5} scrollWheelZoom={false} style={{ marginTop: '10px', marginBottom: '10px', height: '42vh', width: '50wh' }}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Circle center={[53.5461, -113.4938]} pathOptions={{ fillColor: 'blue' }} radius={props.edmontonActiveNumber * 100} />\n        <Circle center={[51.0447, -114.0719]} pathOptions={{ fillColor: 'red' }} radius={props.calgaryActiveNumber * 100} />\n        <Marker position={[53.5461, -113.4938]}>\n          <Popup>\n            Edmonton Active Cases: {props.edmontonActiveNumber}\n          </Popup>\n        </Marker>\n        <Marker position={[51.0447, -114.0719]}>\n          <Popup>\n            Calgary Active Cases {props.calgaryActiveNumber}\n          </Popup>\n        </Marker>\n      </MapContainer>\n    </React.Fragment>\n  );\n};\n\nexport default map;\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    ArgumentAxis,\n    ValueAxis,\n    Chart,\n    LineSeries,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\n\nexport default class AlbertaNewCases extends React.PureComponent {\n\n    old = [...this.props.albertaDailyData];\n    newCases = this.old.reverse().map((data, i) => {\n        if (this.props.albertaDailyData[i + 1]) {\n            return ({\n                splineValue: this.props.albertaDailyData[i][\"cases_confirmed_cumulative\"] - this.props.albertaDailyData[i + 1][\"cases_confirmed_cumulative\"],\n                argument: data.date,\n            });\n        }\n        else {\n            return ({\n                splineValue: 0,\n                argument: 0,\n            });;\n        }\n\n    });\n    state = {\n        data: this.newCases\n    };\n\n    render() {\n\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width=\"70vw\"\n                    data={chartData}\n                >\n                    <Title text=\"Alberta new cases curve\" />\n\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"spline\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                    />\n                </Chart>\n                <Typography align=\"center\">Since the beginning of the pandemic</Typography>\n            </Paper>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    ArgumentAxis,\n    ValueAxis,\n    Chart,\n    LineSeries,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\n\n\nexport default class AlbertaNewCases extends React.PureComponent {\n\n    old = [...this.props.albertaDailyData];\n    cases = this.old.reverse().map((data) => {\n\n        return ({\n            splineValue: Math.log(data[\"cases_confirmed_cumulative\"]),\n            argument: data.date,\n        });\n\n\n    });\n    state = {\n        data: this.cases\n    };\n\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width=\"70vw\"\n                    data={chartData}\n                >\n                    <Title text=\"Alberta accumulate cases curve (log)\" />\n\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"spline\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                    />\n                </Chart>\n                <Typography align=\"center\">Since the beginning of the pandemic</Typography>\n            </Paper>\n        );\n    }\n}\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    ValueAxis,\n    Chart,\n    Legend,\n    LineSeries,\n    Title,\n    SplineSeries,\n} from '@devexpress/dx-react-chart-material-ui';\n\nexport default class CitiesNewCases extends React.PureComponent {\n\n    oldEdmonton = [...this.props.edmontonDailyData];\n    oldCalgary = [...this.props.calgaryDailyData];\n\n    newEdmontonCases = this.oldEdmonton.reverse().map((data, i) => {\n        if (this.props.edmontonDailyData[i + 1]) {\n            return ({\n                splineValue: this.props.edmontonDailyData[i][\"cases_confirmed_cumulative\"] - this.props.edmontonDailyData[i + 1][\"cases_confirmed_cumulative\"],\n                argument: data.date,\n            });\n        }\n        else {\n            return ({\n                splineValue: 0,\n                argument: 0,\n\n            });;\n        }\n    });\n    newCalgaryCases = this.oldCalgary.reverse().map((data, i) => {\n        if (this.props.calgaryDailyData[i + 1]) {\n            return ({\n                lineValue: this.props.calgaryDailyData[i][\"cases_confirmed_cumulative\"] - this.props.calgaryDailyData[i + 1][\"cases_confirmed_cumulative\"],\n            });\n        }\n        else {\n            return ({\n                lineValue: 0\n            });;\n        }\n\n    });\n    newCitiesCases = this.newEdmontonCases.map((data, i) => {\n        return ({\n            splineValue: data.splineValue,\n            lineValue: this.newCalgaryCases[i].lineValue,\n            argument: data.argument,\n        });\n    });\n    state = {\n        data: this.newCitiesCases\n    };\n    render() {\n        const { data: chartData } = this.state;\n        return (\n            <Paper style={{ width: \"70vw\" }}>\n                <Chart height={300}\n                    width='70vw'\n                    data={chartData}\n                >\n                    <Title text=\"Edmonton vs Calgary new cases curve\" />\n                    <ValueAxis />\n                    <SplineSeries\n                        name=\"Edmonton\"\n                        valueField=\"splineValue\"\n                        argumentField=\"argument\"\n                        color=\"blue\"\n                    />\n                    <LineSeries\n                        name=\"Calgary\"\n                        valueField=\"lineValue\"\n                        argumentField=\"argument\"\n                        color=\"red\"\n                    />\n                    <Legend />\n\n                </Chart>\n                <Typography align=\"center\">Since the beginning of the pandemic</Typography>\n            </Paper >\n        );\n    }\n}\n// return (\n//     <Paper style={{ width: \"800px\" }}>\n//         <Chart height={300}\n//             width={800}\n//             data={chartData}\n//         >\n//             <Title text=\"Edmonton vs Calgary new cases curve\" />\n//             <ValueAxis />\n//             <SplineSeries\n//                 name=\"Edmonton\"\n//                 valueField=\"splineValue\"\n//             />\n//             {/* <LineSeries\n//                 name=\"Calgary\"\n//                 valueField=\"lineValue\"\n//             /> */}\n//             <Legend />\n//         </Chart>\n//         <Typography align=\"center\">Since the beginning of the pandemic</Typography>\n//     </Paper>\n// );","import \"moment-timezone\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, CssBaseline } from \"@material-ui/core\";\nimport TitleBar from './components/TitleBar/TitleBar';\nimport Copyright from \"./components/Copyright/Copyright\";\nimport { getYesterdaysDate } from './Helper/dataFilter';\nimport Loading from '../src/components/Loading/Loading';\nimport ZoneCard from './components/ZoneCard/ZoneCard';\nimport Alberta from './components/Visualization/Alberta';\nimport Gender from './components/Visualization/Gender';\nimport City from './components/Visualization/City';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport Map from '../src/components/MapContainer/MapContainer';\nimport AlbertaNewCases from '../src/components/Visualization/AlbertaNewCases';\nimport AlbertaCases from './components/Visualization/AlbertaCases';\nimport CitiesNewCases from './components/Visualization/CitiesNewCases';\nclass App extends Component {\n\n  state = {\n    albertaOldData: null,\n    albertaData: null, albertaRecovered: [], albertaActive: [], albertaDied: [],\n    edmontonData: [], edmontonRecovered: [], edmontonActive: [], edmontonDied: [],\n    calgaryData: [], calgaryRecovered: [], calgaryActive: [], calgaryDied: [],\n    northData: [], northRecovered: [], northActive: [], northDied: [],\n    southData: [], southRecovered: [], southActive: [], southDied: [],\n    centralData: [], centralRecovered: [], centralActive: [], centralDied: [],\n    albertaDailyData: [], edmontonDailyData: [], calgaryDailyData: []\n  };\n  componentDidMount() {\n    const dayBeforeYesterday = getYesterdaysDate(3);\n    axios.get(`https://data.edmonton.ca/resource/jmcu-tz8y.json?$limit=10000000000&$where=date_reported between '2020-03-06' and '${dayBeforeYesterday}'&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq`).then((response) => {\n      const albertaOldData = response.data;\n      this.setState({ albertaOldData: albertaOldData });\n\n    });\n    /**\n    Getting the Alberta Day by Day Covid-19 Data\n    */\n    axios.get('https://data.edmonton.ca/resource/gxqm-z6fa.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n        const albertaDailyData = response.data.filter((data) => {\n          return data.location === \"Alberta\";\n        });\n        const edmontonDailyData = response.data.filter((data) => {\n          return data.location === \"Edmonton Zone\";\n        });\n        const calgaryDailyData = response.data.filter((data) => {\n          return data.location === \"Calgary Zone\";\n        });\n\n        this.setState({ edmontonDailyData: edmontonDailyData, albertaDailyData: albertaDailyData, calgaryDailyData: calgaryDailyData });\n\n      });\n    axios.get('https://data.edmonton.ca/resource/jmcu-tz8y.json?$limit=10000000000&$$app_token=CoCmeiMMf8g0Uexp09f2YjYWq')\n      .then((response) => {\n        const albertaData = response.data;\n\n        const edmontonData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Edmonton Zone');\n        });\n        const albertaRecovered = albertaData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const albertaActive = albertaData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const albertaDied = albertaData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const edmontonRecovered = edmontonData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const edmontonActive = edmontonData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const edmontonDied = edmontonData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const calgaryData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Calgary Zone');\n        });\n        const calgaryRecovered = calgaryData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const calgaryActive = calgaryData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const calgaryDied = calgaryData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const northData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'North Zone');\n        });\n        const northRecovered = northData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const northActive = northData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const northDied = northData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const southData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'South Zone');\n        });\n        const southRecovered = southData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const southActive = southData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const southDied = southData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        const centralData = albertaData.filter((data) => {\n          return (data['alberta_health_services_zone'] === 'Central Zone');\n        });\n        const centralRecovered = centralData.filter((data) => {\n          return data['case_status'] === 'Recovered';\n        });\n        const centralActive = centralData.filter((data) => {\n          return data['case_status'] === 'Active';\n        });\n        const centralDied = centralData.filter((data) => {\n          return data['case_status'] === 'Died';\n        });\n        this.setState({\n          albertaData, albertaRecovered, albertaActive, albertaDied,\n          edmontonData, edmontonRecovered, edmontonActive, edmontonDied,\n          calgaryData, calgaryRecovered, calgaryActive, calgaryDied,\n          northData, northRecovered, northActive, northDied,\n          southData, southRecovered, southActive, southDied,\n          centralData, centralRecovered, centralActive, centralDied\n        });\n      });\n  }\n  render() {\n    let theme = createMuiTheme();\n    theme = responsiveFontSizes(theme);\n    return (\n      // #2B588E\n      <React.Fragment>\n        <CssBaseline />\n        <TitleBar />\n        <main>\n          <ThemeProvider theme={theme}>\n            {this.state.albertaData === null || this.state.albertaOldData === null || this.state.albertaDailyData === null ?\n              <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n                <Loading type=\"spin\" color=\"black\" />\n              </div> :\n              <Container maxWidth='lg' style={{ marginBottom: '10px' }}>\n                <div style={{ marginBottom: '20px' }}>\n                  <ZoneCard albertaData={this.state.albertaData}\n                    albertaOldData={this.state.albertaOldData}\n                    edmontonData={this.state.edmontonData}\n                    edmontonActive={this.state.edmontonActive}\n                    edmontonRecovered={this.state.edmontonRecovered}\n                    edmontonDied={this.state.edmontonDied}\n                    calgaryData={this.state.calgaryData}\n                    calgaryActive={this.state.calgaryActive}\n                    calgaryRecovered={this.state.calgaryRecovered}\n                    calgaryDied={this.state.calgaryDied} />\n                </div>\n                <Grid container justify=\"center\" spacing={4}>\n                  <Grid item >\n                    <Alberta albertaActive={this.state.albertaActive}\n                      albertaRecovered={this.state.albertaRecovered}\n                      albertaDied={this.state.albertaDied} />\n                  </Grid>\n                  <Grid item >\n                    <Gender albertaData={this.state.albertaData} />\n                  </Grid>\n                  <Grid item >\n                    <City edmontonData={this.state.edmontonData} calgaryData={this.state.calgaryData} />\n                  </Grid>\n                  <Grid item >\n                    <AlbertaNewCases albertaDailyData={this.state.albertaDailyData} />\n                  </Grid>\n                  <Grid item >\n                    <AlbertaCases albertaDailyData={this.state.albertaDailyData} />\n                  </Grid>\n                  <Grid item >\n                    <CitiesNewCases calgaryDailyData={this.state.calgaryDailyData} edmontonDailyData={this.state.edmontonDailyData} />\n                  </Grid>\n                </Grid>\n                <Map edmontonActiveNumber={this.state.edmontonActive.length}\n                  calgaryActiveNumber={this.state.calgaryActive.length} />\n              </Container>\n            }\n          </ThemeProvider>\n        </main>\n        <footer>\n          <Copyright />\n        </footer>\n      </React.Fragment >\n    );\n  }\n\n};\n\nexport default App;\n","export const getYesterdaysDate = (offset) => {\n    /**\n     *  yesterday: offset=2, dayBeforeYesterday: offset = 3\n     */\n    let date = new Date();\n    date.setDate(date.getDate() - offset);\n    return (\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n};\n\n/*----------------------------------------removeDuplicates-------------------------*/\nexport const removeDuplicates = (originalArray, prop) => {\n    let newArray = [];\n    let lookupObject = {};\n    for (let i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n    }\n    for (let i in lookupObject) {\n        newArray.push(lookupObject[i]);\n    }\n    return newArray;\n};\n//reference:https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n/*--------------------------------------Finalize the array-------------------------*/\nexport const finalizeArray = (originalArray, uniqueArray) => {\n    let finalArray = [];\n    for (let i = 0; i < uniqueArray.length; i++) {\n        let newObject = {};\n        newObject[\"alberta_health_services_zone\"] =\n            uniqueArray[i][\"alberta_health_services_zone\"];\n        let zoneArray = originalArray.filter(\n            (city) =>\n                city[\"alberta_health_services_zone\"] ===\n                uniqueArray[i][\"alberta_health_services_zone\"]\n        );\n        newObject[\"total case\"] = zoneArray.length;\n        newObject[\"total active\"] = zoneArray.filter(\n            (active) => active[\"case_status\"] === \"Active\"\n        ).length;\n        newObject[\"total death\"] = zoneArray.filter(\n            (death) => death[\"case_status\"] === \"Died\"\n        ).length;\n        finalArray.push(newObject);\n    }\n    return finalArray;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}